image: openjdk:11

variables:
  ANDROID_COMPILE_SDK: "34"
  ANDROID_BUILD_TOOLS: "34.0.0"
  ANDROID_SDK_ROOT: "$CI_PROJECT_DIR/android-sdk"
  GRADLE_USER_HOME: "$CI_PROJECT_DIR/.gradle"

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - .gradle/wrapper
    - .gradle/caches

before_script:
  - export ANDROID_SDK_ROOT=$HOME/Android/Sdk
  - mkdir -p $ANDROID_SDK_ROOT
  - wget https://dl.google.com/android/repository/commandlinetools-linux-7302050_latest.zip
  - unzip commandlinetools-linux-7302050_latest.zip -d $ANDROID_SDK_ROOT/cmdline-tools
  - mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/tools
  - mv $ANDROID_SDK_ROOT/cmdline-tools/* $ANDROID_SDK_ROOT/cmdline-tools/tools
  - yes | $ANDROID_SDK_ROOT/cmdline-tools/tools/bin/sdkmanager --licenses
  - $ANDROID_SDK_ROOT/cmdline-tools/tools/bin/sdkmanager "platform-tools" "build-tools;34.0.0" "platforms;android-34"
  - mkdir -p $ANDROID_SDK_ROOT
  - yes | sdkmanager --licenses
  - sdkmanager "platforms;android-$ANDROID_COMPILE_SDK" "build-tools;$ANDROID_BUILD_TOOLS" "platform-tools"
  - sdkmanager "system-images;android-$ANDROID_COMPILE_SDK;default;x86_64"
  - sdkmanager "emulator"
  - echo "Setting up AVD"
  - avdmanager create avd -n test -k "system-images;android-$ANDROID_COMPILE_SDK;default;x86_64" --force
  - $ANDROID_SDK_ROOT/emulator/emulator-headless @test -no-snapshot-save -no-window -no-audio &


build-job:
  stage: build
  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"

unit_test:
  stage: test
  script:
    - echo "This job tests something"
    - ./gradlew test

test-job2:
  stage: test
  script:
    - echo "This job tests something, but takes more time than test-job1."
    - echo "After the echo commands complete, it runs the sleep command for 20 seconds"
    - echo "which simulates a test that runs 20 seconds longer than test-job1"
    - sleep 20

deploy-prod:
  stage: deploy
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  environment: production
